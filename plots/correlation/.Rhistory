# cmap <- c("red2", "darkolivegreen4", "blueviolet", "cornflowerblue", "darkgoldenrod")
cmap <- c("#E69F00", "#CC79A7", "#009E73", "#0072B2", "#D55E00")
names(cmap) <- subs
ggplot(df, aes(x=as.integer(index), y=as.numeric(value), group=as.integer(sid), color=subject)) +
geom_line() +
scale_color_manual("subject", values=cmap) +
geom_segment(x = campAnnoun, y = 0, xend = campAnnoun, yend = 0.37, color="black") +
geom_segment(x = elect2016, y = 0, xend = elect2016, yend = 0.37, color="black") +
geom_segment(x = elect2012, y = 0, xend = elect2012, yend = 0.37, color="black") +
geom_segment(x = bookRel, y = 0, xend = bookRel, yend = 0.37, color="black") +
annotate("text", x = campAnnoun, y = 0.39, label = "Campaign\nannouncement") +
annotate("text", x = elect2016, y = 0.39, label = "2016\nElection") +
annotate("text", x = elect2012, y = 0.39, label = "2012\nElection") +
annotate("text", x = bookRel, y = 0.395, label = "Time to \nGet Tough\nBook release") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0,0), breaks = idx, labels=labs) +
scale_y_continuous(limits=c(0, 0.4), sec.axis = sec_axis(~ ., breaks = as.numeric(d_ends), labels = d_labs)) +
ggtitle("The Presidential focus",
subtitle = "The subject of Trumps tweets over time") +
labs(x = "Time", y = "Average proportion of tweets")
# cmap <- c("red2", "darkolivegreen4", "blueviolet", "cornflowerblue", "darkgoldenrod")
cmap <- c("#E69F00", "#009E73", "#CC79A7", "#0072B2", "#D55E00")
names(cmap) <- subs
ggplot(df, aes(x=as.integer(index), y=as.numeric(value), group=as.integer(sid), color=subject)) +
geom_line() +
scale_color_manual("subject", values=cmap) +
geom_segment(x = campAnnoun, y = 0, xend = campAnnoun, yend = 0.37, color="black") +
geom_segment(x = elect2016, y = 0, xend = elect2016, yend = 0.37, color="black") +
geom_segment(x = elect2012, y = 0, xend = elect2012, yend = 0.37, color="black") +
geom_segment(x = bookRel, y = 0, xend = bookRel, yend = 0.37, color="black") +
annotate("text", x = campAnnoun, y = 0.39, label = "Campaign\nannouncement") +
annotate("text", x = elect2016, y = 0.39, label = "2016\nElection") +
annotate("text", x = elect2012, y = 0.39, label = "2012\nElection") +
annotate("text", x = bookRel, y = 0.395, label = "Time to \nGet Tough\nBook release") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0,0), breaks = idx, labels=labs) +
scale_y_continuous(limits=c(0, 0.4), sec.axis = sec_axis(~ ., breaks = as.numeric(d_ends), labels = d_labs)) +
ggtitle("The Presidential focus",
subtitle = "The subject of Trumps tweets over time") +
labs(x = "Time", y = "Average proportion of tweets")
subs
# cmap <- c("red2", "darkolivegreen4", "blueviolet", "cornflowerblue", "darkgoldenrod")
cmap <- c("#D55E00", "#009E73", "#CC79A7", "#0072B2", "#E69F00")
names(cmap) <- subs
ggplot(df, aes(x=as.integer(index), y=as.numeric(value), group=as.integer(sid), color=subject)) +
geom_line() +
scale_color_manual("subject", values=cmap) +
geom_segment(x = campAnnoun, y = 0, xend = campAnnoun, yend = 0.37, color="black") +
geom_segment(x = elect2016, y = 0, xend = elect2016, yend = 0.37, color="black") +
geom_segment(x = elect2012, y = 0, xend = elect2012, yend = 0.37, color="black") +
geom_segment(x = bookRel, y = 0, xend = bookRel, yend = 0.37, color="black") +
annotate("text", x = campAnnoun, y = 0.39, label = "Campaign\nannouncement") +
annotate("text", x = elect2016, y = 0.39, label = "2016\nElection") +
annotate("text", x = elect2012, y = 0.39, label = "2012\nElection") +
annotate("text", x = bookRel, y = 0.395, label = "Time to \nGet Tough\nBook release") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0,0), breaks = idx, labels=labs) +
scale_y_continuous(limits=c(0, 0.4), sec.axis = sec_axis(~ ., breaks = as.numeric(d_ends), labels = d_labs)) +
ggtitle("The Presidential focus",
subtitle = "The subject of Trumps tweets over time") +
labs(x = "Time", y = "Average proportion of tweets")
subs
# cmap <- c("red2", "darkolivegreen4", "blueviolet", "cornflowerblue", "darkgoldenrod")
cmap <- c("#D55E00", "#009E73", "#E69F00", "#0072B2", "#CC79A7")
names(cmap) <- subs
ggplot(df, aes(x=as.integer(index), y=as.numeric(value), group=as.integer(sid), color=subject)) +
geom_line() +
scale_color_manual("subject", values=cmap) +
geom_segment(x = campAnnoun, y = 0, xend = campAnnoun, yend = 0.37, color="black") +
geom_segment(x = elect2016, y = 0, xend = elect2016, yend = 0.37, color="black") +
geom_segment(x = elect2012, y = 0, xend = elect2012, yend = 0.37, color="black") +
geom_segment(x = bookRel, y = 0, xend = bookRel, yend = 0.37, color="black") +
annotate("text", x = campAnnoun, y = 0.39, label = "Campaign\nannouncement") +
annotate("text", x = elect2016, y = 0.39, label = "2016\nElection") +
annotate("text", x = elect2012, y = 0.39, label = "2012\nElection") +
annotate("text", x = bookRel, y = 0.395, label = "Time to \nGet Tough\nBook release") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0,0), breaks = idx, labels=labs) +
scale_y_continuous(limits=c(0, 0.4), sec.axis = sec_axis(~ ., breaks = as.numeric(d_ends), labels = d_labs)) +
ggtitle("The Presidential focus",
subtitle = "The subject of Trumps tweets over time") +
labs(x = "Time", y = "Average proportion of tweets")
library(odbc)
conn <- DBI::dbConnect(odbc::odbc(), Driver = "PostgreSQL", Server = "db.jocani.dk",
Database = "dataviz", UID = "dataviz", PWD = "O06PPP51D6MYvJcK97jbMLVgZMfP8pOG",
Port = 5432)
df <- dbGetQuery(conn, "select idx.index, concat(grouped.month::varchar, '/', grouped.year::varchar) as label, grouped.*
from
(select date_part('year', ts)::integer as year, date_part('month', ts)::integer as month, subject, sid, avg(value) as value
from
(select to_timestamp(date, 'DD/MM/YYYY HH24:MI') ts,
unnest(array['Campaigning', 'apprentice', 'obama', 'Economy', 'politics', 'miss_universe', 'fox_news', 'Make America Great Again', 'wind_energy', 'hillary_clinton', 'birthdays_anniversaries', 'Golf and hotel brands', 'Events & visits', 'business', 'trump_clothing_brand', 'obamacare', 'campaign_opponents', 'fake_news']) as subject,
unnest(array[1 ,2 ,3 ,4 ,5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]) as sid,
unnest(array[campaigning, apprentice, obama, economy, politics, miss_universe, fox_news, maga, wind_energy, hillary_clinton, birthdays_anniversaries, golf_hotel_brand, events_visits, business, trump_clothing_brand, obamacare, campaign_opponents, fake_news])::numeric as value
from exam.trump) raw
group by year, month, subject, sid
order by year, month, subject, sid asc) grouped
inner join (select row_number() over() as index, year, month
from
(select distinct date_part('year', to_timestamp(date, 'DD/MM/YYYY HH24:MI'))::integer as year, date_part('month', to_timestamp(date, 'DD/MM/YYYY HH24:MI'))::integer as month
from exam.trump
order by year, month asc) sq) idx on (idx.year = grouped.year and idx.month = grouped.month)
where subject in ('Economy','Campaigning', 'Events & visits', 'Golf and hotel brands', 'Make America Great Again')")
library(ggplot2)
library(dplyr)
d_ends <- df %>%
group_by(subject) %>%
top_n(1, index) %>%
pull(value)
d_labs <- df %>%
group_by(subject) %>%
top_n(1, index) %>%
pull(subject)
campAnnoun <- df %>% filter(label=="6/2015") %>% distinct(index) %>% pull(index)
elect2016 <- df %>% filter(label=="11/2016") %>% distinct(index) %>% pull(index)
elect2012 <- df %>% filter(label=="11/2012") %>% distinct(index) %>% pull(index)
bookRel <- df %>% filter(label=="11/2011") %>% distinct(index) %>% pull(index)
labs <- df %>%
filter(month==1) %>%
distinct(label) %>%
pull(label)
idx <- df %>%
filter(month==1) %>%
distinct(index) %>%
pull(index)
# Colour map
subs <- df %>% distinct(subject) %>% pull(subject)
# cmap <- c("red2", "darkolivegreen4", "blueviolet", "cornflowerblue", "darkgoldenrod")
cmap <- c("#D55E00", "#009E73", "#E69F00", "#0072B2", "#CC79A7")
names(cmap) <- subs
ggplot(df, aes(x=as.integer(index), y=as.numeric(value), group=as.integer(sid), color=subject)) +
geom_line() +
scale_color_manual("subject", values=cmap) +
geom_segment(x = campAnnoun, y = 0, xend = campAnnoun, yend = 0.37, color="black") +
geom_segment(x = elect2016, y = 0, xend = elect2016, yend = 0.37, color="black") +
geom_segment(x = elect2012, y = 0, xend = elect2012, yend = 0.37, color="black") +
geom_segment(x = bookRel, y = 0, xend = bookRel, yend = 0.37, color="black") +
annotate("text", x = campAnnoun, y = 0.39, label = "Campaign\nannouncement") +
annotate("text", x = elect2016, y = 0.39, label = "2016\nElection") +
annotate("text", x = elect2012, y = 0.39, label = "2012\nElection") +
annotate("text", x = bookRel, y = 0.395, label = "Time to \nGet Tough\nBook release") +
theme_minimal() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0,0), breaks = idx, labels=labs) +
scale_y_continuous(limits=c(0, 0.4), sec.axis = sec_axis(~ ., breaks = as.numeric(d_ends), labels = d_labs)) +
ggtitle("The Presidential focus",
subtitle = "The subject of Trumps tweets over time") +
labs(x = "Time", y = "Average proportion of tweets")
library(odbc)
conn <- DBI::dbConnect(odbc::odbc(), Driver = "PostgreSQL", Server = "db.jocani.dk",
Database = "dataviz", UID = "dataviz", PWD = "O06PPP51D6MYvJcK97jbMLVgZMfP8pOG",
Port = 5432)
df <- dbGetQuery(conn, "select
'Pre-2012 election' as w,
unnest(array['Economy', 'Fake News', 'Politics', 'Obama', 'Event visits', 'Campaign Opponents', 'Wind energy',  'Trump Clothing Brand','Fox News', 'Apprentice', 'Business']) as subject,
unnest(array[economy, fake_news, politics, obama, events_visits, campaign_opponents, wind_energy,  trump_clothing_brand,fox_news, apprentice, business])::numeric as value
from exam.trump
where to_timestamp(date, 'DD/MM/YYYY HH24:MI') < '11/11/2012'::date
and to_timestamp(date, 'DD/MM/YYYY HH24:MI') > '11/11/2012'::date - interval '6 months'
union all
select
'Post-2012 election' as w,
unnest(array['Economy', 'Fake News', 'Politics', 'Obama', 'Event visits', 'Campaign Opponents', 'Wind energy',  'Trump Clothing Brand','Fox News', 'Apprentice', 'Business']) as subject,
unnest(array[economy, fake_news, politics, obama, events_visits, campaign_opponents, wind_energy,  trump_clothing_brand,fox_news, apprentice, business])::numeric as value
from exam.trump
where to_timestamp(date, 'DD/MM/YYYY HH24:MI') > '11/11/2012'::date
and to_timestamp(date, 'DD/MM/YYYY HH24:MI') < '11/11/2012'::date + interval '6 months'")
library(ggplot2)
library(dplyr)
df$w_f = factor(df$w, levels=c('Pre-2012 election', 'Post-2012 election'))
df$subject_f = factor(df$subject, levels=c('Economy', 'Fake News', 'Politics', 'Obama', 'Event visits', 'Campaign Opponents', 'Wind energy',  'Trump Clothing Brand','Fox News', 'Apprentice', 'Business'))
ggplot(df, aes(x=subject_f, y=as.numeric(value), fill=w_f)) +
stat_summary(fun.y=mean, geom='bar', position="dodge") +
theme_minimal() +
theme(legend.title = element_blank()) +
coord_cartesian(ylim=c(0, 0.2)) +
labs(x = "Subject", y="Avg proportion of tweets") +
ggtitle("Focus before and after 2012 election",
subtitle="Average over 6 month windows")
cmap <- c("#D55E00", "#009E73")
ggplot(df, aes(x=subject_f, y=as.numeric(value), fill=w_f)) +
stat_summary(fun.y=mean, geom='bar', position="dodge") +
scale_fill_manual("w_f", values=cmap) +
theme_minimal() +
theme(legend.title = element_blank()) +
coord_cartesian(ylim=c(0, 0.2)) +
labs(x = "Subject", y="Avg proportion of tweets") +
ggtitle("Focus before and after 2012 election",
subtitle="Average over 6 month windows")
cmap <- c("#D55E00", "#E69F00")
ggplot(df, aes(x=subject_f, y=as.numeric(value), fill=w_f)) +
stat_summary(fun.y=mean, geom='bar', position="dodge") +
scale_fill_manual("w_f", values=cmap) +
theme_minimal() +
theme(legend.title = element_blank()) +
coord_cartesian(ylim=c(0, 0.2)) +
labs(x = "Subject", y="Avg proportion of tweets") +
ggtitle("Focus before and after 2012 election",
subtitle="Average over 6 month windows")
cmap <- c("#D55E00", "#0072B2")
ggplot(df, aes(x=subject_f, y=as.numeric(value), fill=w_f)) +
stat_summary(fun.y=mean, geom='bar', position="dodge") +
scale_fill_manual("w_f", values=cmap) +
theme_minimal() +
theme(legend.title = element_blank()) +
coord_cartesian(ylim=c(0, 0.2)) +
labs(x = "Subject", y="Avg proportion of tweets") +
ggtitle("Focus before and after 2012 election",
subtitle="Average over 6 month windows")
library(odbc)
conn <- DBI::dbConnect(odbc::odbc(), Driver = "PostgreSQL", Server = "db.jocani.dk",
Database = "dataviz", UID = "dataviz", PWD = "O06PPP51D6MYvJcK97jbMLVgZMfP8pOG",
Port = 5432)
df <- dbGetQuery(conn, "select sent_labs, labs, avg(sent_vals) sent_vals, avg(vals) vals, avg(sent_vals)*avg(vals) comb_vals
from
(select ts,
unnest(array['Joy', 'Excitement', 'Eempowerment', 'Anger', 'Sadness', 'Fearful']) sent_labs,
unnest(array[sw_joy, sw_excitement, sw_empowered, sw_anger, sw_sadness, sw_fearful])::numeric sent_vals,
labs, vals
from
(select
to_timestamp(date, 'DD/MM/YYYY HH24:MI') ts,
sw_anger, sw_empowered, sw_excitement, sw_fearful, sw_joy, sw_sadness,
unnest(array['Campaigning', 'Retweets', 'Fox News', 'Fake News', 'Campaign Opponents', 'MAGA', 'Birthday Anniversaries', 'Obamacare', 'Politics', 'Event visits', 'Hillary Clinton', 'Golf & Hotel brands', 'Business', 'Obama', 'Economy', 'Misc', 'Apprentice', 'Trump Clothing Brand', 'Wind energy']) labs,
unnest(array[campaigning, retweets, fox_news, fake_news, campaign_opponents, maga, birthdays_anniversaries, obamacare, politics, events_visits, hillary_clinton, golf_hotel_brand, business, obama, economy, misc, apprentice, trump_clothing_brand, wind_energy])::numeric vals
from exam.trump) A) B
where ts > '6/16/2015'::date
and ts < '11/11/2016'::date
group by sent_labs, labs")
library(ggplot2)
library(dplyr)
df$sent_labs_f <- factor(df$sent_labs, levels = c('Joy', 'Excitement', 'Eempowerment', 'Anger', 'Sadness', 'Fearful'))
df$labs_f <- factor(df$labs, levels = c('Campaigning', 'Retweets', 'Fox News', 'Fake News', 'Campaign Opponents', 'MAGA', 'Birthday Anniversaries', 'Obamacare', 'Politics', 'Event visits', 'Hillary Clinton', 'Golf & Hotel brands', 'Business', 'Obama', 'Economy', 'Misc', 'Apprentice', 'Trump Clothing Brand', 'Wind energy'))
ggplot(df, aes(x=sent_labs_f, y=labs_f)) +
geom_tile(aes(fill=as.numeric(comb_vals))) +
scale_fill_gradient(low="white", high="steelblue") +
theme_minimal() +
theme(legend.position = "none") +
labs(x="Emotion", y="Subject") +
ggtitle("Subjects and emotion of the campaing")
install.packages("sdcmicro")
install.packages("sdcMicro")
library(sdcMicro)
sex <- c("f", "m", "f", "m". "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
df
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
df
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc
kAnon(sdc, k=2)
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
kAnon(sdc1,k=2)
kAnon(sdc2,k=2)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
sdc1 <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
sdc1
View(sdc1)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
sdc1 <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
extractManipData(sdc1)
extractManipData(sdc2)
indivRisk(sdc1)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
sdc1 <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
extractManipData(sdc1)
extractManipData(sdc2)
indivRisk(sdc1)
riskyCells(sdc1)
freqCalc(sdc1)
freqCalc(extractManipData(sdc1))
sdc1
extractManipData(sdc1)
plot(sdc1)
plot(sdc1)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
sdc1 <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
extractManipData(sdc1)
extractManipData(sdc2)
plot(sdc1)
plot(sdc1, showTotalSupps=TRUE)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
test <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
extractManipData(sdc1)
extractManipData(sdc2)
plot(test)
library(sdcMicro)
sex <- c("f", "m", "f", "m", "m", "m")
married <- c("y", "n", "n", "y", "y", "n")
nationality <- c("Danish", "German", "US", "Danish", "Danish", "French")
zip <- c(2000, 2200, 2200, 2100, 2300, 2100)
condition <- c("Cancer", "Flu", "Flu", "Heart attack", "Cold", "Flu")
df <- data.frame(sex, married, nationality, zip, condition)
sdc <- createSdcObj(df,
keyVars=c("sex", "married", "nationality", "zip"),
sensibleVar = "condition")
sdc1 <- groupAndRename(sdc, var = "nationality",
before = c("German", "US", "French"),
after = "Non-Danish")
sdc2 <- groupAndRename(sdc, var = "nationality",
before = c("German", "Danish", "French"),
after = "EU")
sdc2 <- groupAndRename(sdc2, var = "nationality",
before = c("US"),
after = "Non-EU")
sdc1 <- kAnon(sdc1,k=2)
sdc2 <- kAnon(sdc2,k=2)
extractManipData(sdc1)
extractManipData(sdc2)
setwd("~/Documents/School/bsc/plots/correlation")
install.packages("ggcorrplot")
dist <- read.csv('coef.csv', header=T)
View(dist)
rows(dist) <- cols(dist)
row.names(dist) <- col.names(dist)
rownames(dist) <- colnames(dist)
View(dist)
dist <- read.csv('coef.csv', header=T)
colnames(dist) <- c("Phonetic", "Position", "Distance", "Sentence length", "True")
rownames(dist) <- colnames(dist)
ggcorrplot(dist)
library(dplyr)
library(ggplot2)
library(ggcorrplot)
ggcorrplot(dist)
ggcorrplot(dist) +
theme_Publication()
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.5), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = "black", size=1),
axis.title = element_text(face = "bold",size = rel(1.3)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
# axis.line = element_line(colour="black"),
axis.line = element_blank(),
axis.ticks = element_line(),
panel.grid.major = element_line(colour = "gray", linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(1.5, "cm"),
legend.spacing = unit(0, "cm"),
legend.title = element_text(face="italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
ggcorrplot(dist) +
theme_Publication()
theme_Publication <- function(base_size=14, base_family="helvetica") {
library(grid)
library(ggthemes)
(theme_foundation(base_size=base_size, base_family=base_family)
+ theme(plot.title = element_text(face = "bold",
size = rel(1.5), hjust = 0.5),
text = element_text(),
panel.background = element_rect(colour = NA),
plot.background = element_rect(colour = NA),
panel.border = element_rect(colour = "black", size=1),
axis.title = element_text(face = "bold",size = rel(1.3)),
axis.title.y = element_text(angle=90,vjust =2),
axis.title.x = element_text(vjust = -0.2),
axis.text = element_text(),
# axis.line = element_line(colour="black"),
axis.line = element_blank(),
axis.ticks = element_line(),
panel.grid.major = element_line(colour = "gray", linetype = "dashed"),
panel.grid.minor = element_blank(),
legend.key = element_rect(colour = NA),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key.size= unit(1.5, "cm"),
legend.spacing = unit(0, "cm"),
legend.title = element_text(face="italic"),
plot.margin=unit(c(10,5,5,5),"mm"),
strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
strip.text = element_text(face="bold")
))
}
ggcorrplot(dist) +
theme_Publication()
ggcorrplot(dist)
ggcorrplot(dist, type="lower")
ggcorrplot(dist)
ggcorrplot(dist, type="lower")
ggcorrplot(dist, type="lower", lab=T)
ggcorrplot(dist, lab=T)
